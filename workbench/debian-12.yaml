# This template requires Lima v0.7.0 or later
images:
# Try to use release-yyyyMMdd image if available. Note that release-yyyyMMdd will be removed after several months.
- location: "https://cloud.debian.org/images/cloud/bookworm/20250210-2019/debian-12-genericcloud-amd64-20250210-2019.qcow2"
  arch: "x86_64"
  digest: "sha512:a58d86525d75fd8e139a2302531ce5d2ab75ef0273cfe78f9d53aada4b23efd45f8433b4806fa4570cfe981c8fae26f5e5e855cbd66ba2198862f28125fd2d45"
- location: "https://cloud.debian.org/images/cloud/bookworm/20250210-2019/debian-12-genericcloud-arm64-20250210-2019.qcow2"
  arch: "aarch64"
  digest: "sha512:a17a462acbc3412ef195390fb60dffba2134fef1a276d500ca50a06036c488035657409fcd02f2f70d1e7a91776ca4249cfbceabeb90e74cb123b9971381c72a"
# Fallback to the latest release image.
# Hint: run `limactl prune` to invalidate the cache
- location: "https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-genericcloud-amd64.qcow2"
  arch: "x86_64"
- location: "https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-genericcloud-arm64.qcow2"
  arch: "aarch64"
cpus: 2
memory: 2G
vmType: "qemu"
mountTypesUnsupported: ["9p"]
mounts:
  - location: "~/gokube"
networks:
  - lima: user-v2
containerd:
  system: false
  user: false
provision:
  - mode: user
    script: |
      echo '# gokube begin' >> ~/.bashrc
      echo 'export PATH=$PATH:/Users/$(whoami)/gokube' >> ~/.bashrc
      echo '# gokube end' >> ~/.bashrc
  - mode: system
    script: |
      #!/bin/bash
      # Add Docker's official GPG key:
      apt-get update -y
      apt-get install -y ca-certificates curl
      install -m 0755 -d /etc/apt/keyrings
      curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
      chmod a+r /etc/apt/keyrings/docker.asc

      # Add the repository to Apt sources:
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      apt-get update -y
      apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      groupadd docker
  - mode: user
    script: |
      #!/bin/bash
      sudo usermod -aG docker $(whoami)
      newgrp docker
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      apt-get update -y
      apt-get install -y net-tools
probes:
  - script: |
      #!/bin/bash
      set -eux -o pipefail
      if ! timeout 30s bash -c "until command -v docker >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "docker is not installed yet"
        exit 1
      fi
    hint: See "/var/log/cloud-init-output.log" in the guest